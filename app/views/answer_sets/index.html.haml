- content_for :header do
  = javascript_include_tag 'answer_set_index'

%h1 Listing Mood Swings

=form_tag answer_sets_path, method: :get, id: :answer_set_index do
  %fieldset
    .field
      = label_tag :from_date
      = text_field_tag :from_date, params[:from_date], placeholder: 'yyyy-mm-dd', class: :datepicker

    .field
      = label_tag :to_date
      = text_field_tag :to_date, params[:to_date], placeholder: 'yyyy-mm-dd', class: :datepicker

    .field
      - granularity_options = %w(metric person)
      - granularity_options << 'cohort' if can?(:granularity_by_cohort, AnswerSet)
      - granularity_options << 'campus' if can?(:granularity_by_campus, AnswerSet)
      = label_tag :granularity
      = select_tag :granularity, options_for_select(granularity_options, params[:granularity])

    .field
      - group_options = %w(moment hour day week)
      = label_tag :group
      = select_tag :group, options_for_select(group_options, params[:group])

    - if current_user.accessible_cohorts.count > 1
      .field
        = label_tag :cohort_ids, 'Cohort'
        - current_user.accessible_cohorts.each do |cohort|
          = check_box_tag :'cohort_ids[]', cohort.id, params[:cohort_ids].include?(cohort.id.to_s), id: "cohort_id_#{cohort.id}"
          = label_tag "cohort_id_#{cohort.id}", cohort.name

  .actions
    = submit_tag "refresh chart", class: :submit_button


#myChart{height: 400 }

=content_tag :div, "", id: "line-chart", data: {data: @data.to_json, keys: @keys.to_json, labels: @labels, x_labels: @x_labels}

#hoverContainer

%section#comments
  - answer_sets = @answer_sets.with_comments.group_by{|a|a.created_at.to_date}
  - answer_sets.keys.sort{|x,y| y<=>x}.each do |date|
    %h2 Comments on #{date}
    - answer_sets[date].group_by(&:user_id).each do |_, answer_sets|
      %article
        - if current_user.admin? || current_user.campus_admin? || current_user.cohort_admin?
          %p
            = answer_sets.first.user.email
            = "- #{answer_sets.first.cohort.name}" if params[:cohort_ids].count > 1
        - answer_sets.map(&:answers).flatten.each do |answer|
          - if answer.comments.present?
            %dl
              %dt
                =answer.metric.measure
              %dd
                =answer.comments





